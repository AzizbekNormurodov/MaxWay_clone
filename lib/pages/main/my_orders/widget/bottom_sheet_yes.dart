import 'package:flutter/material.dart';
import 'package:maxway_clone/routes/app_routes.dart';

class BottomSheetYesCommit extends StatefulWidget {
  const BottomSheetYesCommit({Key? key}) : super(key: key);

  @override
  State<BottomSheetYesCommit> createState() => _BottomSheetYesCommitState();
}

class _BottomSheetYesCommitState extends State<BottomSheetYesCommit> {
  bool isChecked = false, isChecked1 = false, isChecked2 = false, isChecked3 = false;
  @override
  Widget build(BuildContext context) {
    return Container(height: 438, decoration: const BoxDecoration(color: Colors.white,
        borderRadius: BorderRadius.all(Radius.circular(16))
    ),
      child: Column(
        crossAxisAlignment:
        CrossAxisAlignment
            .start,
        children: [
          const Padding(
            padding:
            EdgeInsets
                .only(
                left: 12,
                top: 24),
            child: Text(
              "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É: üëç",
              textAlign:
              TextAlign
                  .left,
              style: TextStyle(
                fontSize: 22,
                fontWeight:
                FontWeight
                    .w600,
                color: Colors
                    .black,
              ),
            ),
          ),
          CheckboxListTile(
            //checkbox positioned at right
            value: isChecked,
            onChanged:
                (bool? value) {
              setState(() {
                isChecked = (value ?? false);
              });
            },
            title: const Text(
              "üòâ  –ö—É—Ä—å–µ—Ä –º–æ–ª–æ–¥–µ—Ü",
              textAlign:
              TextAlign
                  .start,
              style: TextStyle(
                fontSize: 15,
              ),
            ),
          ),
          CheckboxListTile(
            //checkbox positioned at right
            value: isChecked1,
            onChanged:
                (bool? value) {
              setState(() {
                isChecked1 = (value ?? false);
              });
            },
            title: const Text(
              "‚ö° –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ ",
              textAlign:
              TextAlign
                  .start,
              style: TextStyle(
                fontSize: 15,
              ),
            ),
          ),
          CheckboxListTile(
            //checkbox positioned at right
            value: isChecked2,
            onChanged:
                (bool? value) {
              setState(() {
                isChecked2 = (value ?? false);
              });
            },
            title: Text(
              "üòã –í–∫—É—Å–Ω–∞—è –µ–¥–∞ ",
              textAlign:
              TextAlign
                  .start,
              style: TextStyle(
                fontSize: 15,
              ),
            ),
          ),
          CheckboxListTile(
            //checkbox positioned at right
            value: isChecked3,
            onChanged:
                (bool? value) {
              setState(() {
                isChecked3 = (value ?? false);
              });
            },
            title: Text(
              "ü§ù –û–ø–µ—Ä–∞—Ç–æ—Ä –±—ã–ª –≤–µ–∂–ª–∏–≤ –∏ –¥—Ä—É–∂–µ–ª—é–±–µ–Ω",
              textAlign:
              TextAlign
                  .start,
              style: TextStyle(
                fontSize: 15,
              ),
            ),
          ),
          const Padding(
            padding: EdgeInsets.all(12.0),
            child: TextField(
              decoration:
              InputDecoration(
                border: OutlineInputBorder(
                    borderRadius:
                    BorderRadius.all(
                        Radius.circular(
                            12))),
                hintText:
                '–î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏...',
              ),
            ),
          ),
          Padding(
            padding: const EdgeInsets.all(12.0),
            child: ElevatedButton(onPressed: (){
              Navigator.pushNamed(
                  context,
                  AppRoutes.current);
            }, child: Text("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å")),
          )
        ],
      ),
    );;
  }
}
